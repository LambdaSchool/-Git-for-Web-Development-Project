    1. What is Semantic HTML? Code that gives meaning to a web page

    2. What is HTML used for? provides a construct to a web page
    
    3. What is an attribute and where do we put it? an attribute provides addtional info about an element usually after an element.
    
    4. What is the h1 tag used for? How many times should I use it on a page? Typically for the title/ header. Should only be use once.
   
    5. Name two tags that have required attributes. href and a
    
    6. What do we put in the head of our HTML document? index.html
    
    7. What is an id? a selector thats used to identify one element
    
    8. What elements can I add an id to? div
   
    9. How many times can I use the same id on a page? once
    
    10. What is a class? a selector that can be used to identify more than one element
    
    11. What elements can I add a class to? div, span,
    
    12. How many times can I use the same class on a page? as many as you want
    
    13. How do I get my link to open in a new tab? target=_blank to the link
    
    14. What is the alt attribute in the image tag used for? for those that cant see the image 
    
    15. How do I reference an id? whatever id{}
    
    16. What is the difference between a section and a div. A section refers to the content inside as a grouping. Div doesnt convey any meaning.
    
    17. What is CSS used for? to stylize a page
    
    18. How to we select an element? Example - every h2 on the page. Use h2{} 
    
    19. What is the difference between a class and an id? - Give me an example of when I might use each one. an id is a selector that refers to one element, a class can be used to refer to many elements
    
    20. How do we select classes in CSS? .class{}
    
    21. How do we select a p element with a single class of “human””? .human{}
    
    22. What is a parent child selector? When would this be useful? it selects all elements that are a direct child of the specific element.
    
    23. How do you select all links within a div with the class of sidebar?
    
    24. What is a pseudo selector? a class sub to a selector that specifies a state of the selected element
    
    25. What do we use the change the spacing between lines?
    margin
    26. What do we use to change the spacing between letters? 
    padding
    27. What do we use to to change everything to CAPITALS? lowercase? Capitalize? text-transform: 
    
    28. How do I add a 1px border around my div that is dotted and black? div{border: 1px dotted black}
    
    29. How do I select everything on the page? *
    
    30. How do I write a comment in CSS? /* comment */
    
    31. How do I find out what file I am in, when I am using the command line? ls
    
    32. Using the command line - how do I see a list of files/folders in my current folder? ls
    
    33. How do I remove a file via the command line? Why do I have to be careful with this? rm , because if you delete it, its gone forvever
    
    34. Why should I use version control? 
    
    35. How often should I commit to github? every 20 mins
    
    36. What is the command we would use to push our repo up to github? 
    
    37. Walk me through Lambda's git flow. 

Stretch Questions
    1. What is the difference between an inline element and a   block element?
    2. What happens when an element is positioned absolutely? 
    3. How do I make an element take up only the amount of space it needs but also have the ability to give it a width? 
    4. Name 3 elements that are diplay block by default, 2 elements that are display inline by default and 1 element that is display inline-block by default
    5. In your own words, explain the box model. What is the fix for the box model? 
Stretch Git Tasks
- [ ] While the processes learned here will set you up to be successful in most situations, they are just the tip of the iceberg in learning Git. Independently research the following topics to learn more about Git.
  - [ ] Research and understand what a `merge conflict` is and how to resolve it.
  - [ ] Research the Git commands `pull`, `rebase`, `merge`. These commands will allow you to bring in changes that other developers push to the main branch.
  - [ ] Research the Git commands `reset `, `revert`, `clean`. These commands will allow you to go back and amends previous commits you have made.

- [ ] Research and set up a Graphical User Interface (GUI) Git console. 

- [ ] Research and setup SSH keys with GitHub, so that you do not need to input your username/password each time you push. 